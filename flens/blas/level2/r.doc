===============
BLAS Level 2: r                                                        [TOC]
===============
*r* (defined in namespace `flens::blas`) computes rank-1 updates for general,
symmetric and hermitian matrices.


General Matrix
==============

*Note:* The following variant is identical with `flens::blas::ru` below.

*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename VX, typename VY, typename MA>         |
|      typename RestrictTo<IsDenseVector<VX>::value                         |
|                       && IsDenseVector<VY>::value                         |
|                       && IsGeMatrix<MA>::value,                           |
|               void>::Type                                                 |
|      r(const ALPHA &alpha, const VX &x, const VY &y, MA &&A);             |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>4#T#T#T#Tr#&1t0.0#&1t0.1#&1t]
                         [0.2#&t0.3#templatetypenameALPHAtypenameVXtypenameV]
                         [YtypenameMAtypenameRestrictToIsDenseVectorVXvalueI]
                         [sDenseVectorVYvalueIsGeMatrixMAvaluevoidType      ]

    alpha    `(input)`                                                         +
             Scaling factor $\alpha$.
    x        `(input) real or complex valued DenseVector`                      +
             Vector $x$.
    y        `(input) real or complex valued DenseVector`                      +
             Vector $y$.
    A        `(input/output) real or complex valued GeMatrix`                  +
             On entry, the initial matrix $A$.                                 +
             On exit, the updated Matrix $A \leftarrow \alpha x y^T$


Unconjugated
------------
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename VX, typename VY, typename MA>         |
|      typename RestrictTo<IsDenseVector<VX>::value                         |
|                       && IsDenseVector<VY>::value                         |
|                       && IsGeMatrix<MA>::value,                           |
|               void>::Type                                                 |
|      ru(const ALPHA &alpha, const VX &x, const VY &y, MA &&A);            |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>4#T#T#T#Tru#&1t0.0#&1t0.1#&1]
                         [t0.2#&t0.3#templatetypenameALPHAtypenameVXtypename]
                         [VYtypenameMAtypenameRestrictToIsDenseVectorVXvalue]
                         [IsDenseVectorVYvalueIsGeMatrixMAvaluevoidType     ]

    alpha    `(input)`                                                         +
             Scaling factor $\alpha$.
    x        `(input) real or complex valued DenseVector`                      +
             Vector $x$.
    y        `(input) real or complex valued DenseVector`                      +
             Vector $y$.
    A        `(input/output) real or complex valued GeMatrix`                  +
             On entry, the initial matrix $A$.                                 +
             On exit, the updated Matrix $A \leftarrow \alpha x y^T$


Conjugated
----------
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename VX, typename VY, typename MA>         |
|      typename RestrictTo<IsDenseVector<VX>::value                         |
|                       && IsDenseVector<VY>::value                         |
|                       && IsGeMatrix<MA>::value,                           |
|               void>::Type                                                 |
|      rc(const ALPHA &alpha, const VX &x, const VY &y, MA &&A);            |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>4#T#T#T#Trc#&1t0.0#&1t0.1#&1]
                         [t0.2#&t0.3#templatetypenameALPHAtypenameVXtypename]
                         [VYtypenameMAtypenameRestrictToIsDenseVectorVXvalue]
                         [IsDenseVectorVYvalueIsGeMatrixMAvaluevoidType     ]

Symmetric Matrix
================

(Todo)


Hermitian Matrix
================

(Todo)
