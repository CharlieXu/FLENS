==================
BLAS Level 1: copy                                                     [TOC:2]
==================

*copy* (defined in namespace `flens::blas`) copies a vector to another vector,
i.e. $y \leftarrow x$.

We also provide variants for
 - copying matrices, i.e.
    - $B \leftarrow A$,
    - $B \leftarrow A^T$ or
    - $B \leftarrow A^H$,
 - copy-conversion of different matrix types, e.g. copy a matrix of type
   `TrMatrix` to a matrix of type `GeMatrix`.


Vector Variant
==============
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename VX, typename VY>                                      |
|      typename RestrictTo<IsDenseVector<VX>::value                         |
|                       && IsDenseVector<VY>::value,                        |
|               void>::Type                                                 |
|      copy(const VX &x, VY &&y);                                           |
|                                                                           |
*---------------------------------------------------------------------------*
                              [c:@N@flens@N@blas@FT@>2#T#Tcopy#&1t0.0#&t0.1#]

    x    `(input) real or complex valued DenseVector`                          +
         Vector $x$.
    y    `(output) real or complex valued DenseVector`                         +
         Vector $y$


Matrix Variants
===============

GeMatrix
--------
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename MA, typename MB>                                      |
|      typename RestrictTo<IsGeMatrix<MA>::value                            |
|                       && IsGeMatrix<MB>::value,                           |
|               void>::Type                                                 |
|      copy(Transpose trans, const MA &A, MB &&B);                          |
|                                                                           |
*---------------------------------------------------------------------------*
                         [M#c:@N@flens@N@blas@FT@>2#T#Tcopy#$@N@cxxblas@E@Tr]
                         [anspose#&1t0.0#&t0.1##variant                     ]

   trans    `(input)`                                                         +
             Specifiy the operation, i.e.
              - $B \leftarrow A$ (_NoTrans_),
              - $B \leftarrow A^T$ (_Trans_),
              - $B \leftarrow A^H$ (_ConjTrans_).
    A        `(input) real or complex valued GeMatrix`                         +
             Matrix $A$.
    B        `(output) real or complex valued GeMatrix`                        +
             Matrix $B$.


TrMatrix
--------
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename MA, typename MB>                                      |
|      typename RestrictTo<IsTrMatrix<MA>::value                            |
|                       && IsTrMatrix<MB>::value,                           |
|               void>::Type                                                 |
|      copy(Transpose trans, const MA &A, MB &&B);                          |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>2#T#Tcopy#$@N@cxxblas@E@Tran]
                         [spose#&1t0.0#&t0.1##variant#variant               ]

    trans    `(input)`                                                         +
             Specifiy the operation, i.e.
              - $B \leftarrow A$ (_NoTrans_),
              - $B \leftarrow A^T$ (_Trans_),
              - $B \leftarrow A^H$ (_ConjTrans_).
    A        `(input) real or complex valued TrMatrix`                         +
             Triangular matrix $A$.
    B        `(output) real or complex valued TrMatrix`                        +
             Triangular matrix $B$.



SyMatrix
--------
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename MA, typename MB>                                      |
|      typename RestrictTo<IsSyMatrix<MA>::value                            |
|                       && IsSyMatrix<MB>::value,                           |
|               void>::Type                                                 |
|      copy(const MA &A, MB &&B);                                           |
|                                                                           |
*---------------------------------------------------------------------------*
                         [M#c:@N@flens@N@blas@FT@>2#T#Tcopy#&1t0.0#&t0.1##va]
                         [riant#variant                                     ]

    A        `(input) real or complex valued SyMatrix`                         +
             Symmetric matrix $A$.
    B        `(output) real or complex valued SyMatrix`                        +
             Symmetric matrix $B$.


Copy-Conversion
===============

TrMatrix to GeMatrix
--------------------
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename MA, typename MB>                                      |
|      typename RestrictTo<IsTrMatrix<MA>::value                            |
|                       && IsGeMatrix<MB>::value,                           |
|               void>::Type                                                 |
|      copy(Transpose trans, const MA &A, MB &&B);                          |
|                                                                           |
*---------------------------------------------------------------------------*
                         [M#c:@N@flens@N@blas@FT@>2#T#Tcopy#$@N@cxxblas@E@Tr]
                         [anspose#&1t0.0#&t0.1#                             ]

    trans    `(input)`                                                         +
             Specifiy the operation, i.e.
              - $B \leftarrow A$ (_NoTrans_),
              - $B \leftarrow A^T$ (_Trans_),
              - $B \leftarrow A^H$ (_ConjTrans_).
    A        `(input) real or complex valued TrMatrix`                         +
             Triangular matrix $A$.
    B        `(output) real or complex valued GeMatrix`                        +
             Matrix $B$.


SyMatrix to GeMatrix
--------------------
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename MA, typename MB>                                      |
|      typename RestrictTo<IsSyMatrix<MA>::value                            |
|                       && IsGeMatrix<MB>::value,                           |
|               void>::Type                                                 |
|      copy(const MA &A, MB &&B);                                           |
|                                                                           |
*---------------------------------------------------------------------------*
                         [M#c:@N@flens@N@blas@FT@>2#T#Tcopy#&1t0.0#&t0.1##va]
                         [riant                                             ]

    A        `(input) real or complex valued SyMatrix`                         +
             Symmetric matrix $A$.
    B        `(output) real or complex valued SyMatrix`                        +
             Matrix $B$.

