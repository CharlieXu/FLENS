===================
Level 1 BLAS: axpy                                                       [TOC]
===================

*axpy* (defined in namespace `flens::blas`) computes $y \leftarrow y +\alpha x$
where $x, y$ are vectors and $\alpha$ is a constant scalar. *axpy* is short
for *a*lpha *x* *p*lus *y*.

We also provide a variant that does the computation for matrices instead of
vectors.


Vector Variant
==============
*--[CODEREF]--------------------------------------------------------------------*
|                                                                               |
|  template <typename ALPHA, typename VX, typename VY>                          |
|      void                                                                     |
|      axpy(const ALPHA &alpha, const DenseVector<VX> &x, DenseVector<VY> &y);  |
|                                                                               |
*-------------------------------------------------------------------------------*
                           [c:@N@flens@N@blas@FT@>3#T#T#Taxpy#&1t0.0#&1>@N@flens]
                           [@CT>1#T@DenseVector1t0.1#&>@N@flens@CT>1#T@DenseVect]
                           [or1t0.2#                                            ]

    alpha    `(input) real scalar`                                             +
             Scaling factor for the values in $x$.
    x        `(input) real or complex valued DenseVector`                      +
             Vector $x$.
    y        `(input/output) real or complex valued DenseVector`               +
             Vector $y$.


Matrix Variant (Level 1 Extension)
==================================
*--[CODEREF]----------------------------------------------------------------*
|                                                                           |
|  template <typename ALPHA, typename MA, typename MB>                      |
|      void                                                                 |
|      axpy(Transpose trans,                                                |
|           const ALPHA &alpha, const GeMatrix<MA> &A, GeMatrix<MB> &B);    |
|                                                                           |
*---------------------------------------------------------------------------*
                         [c:@N@flens@N@blas@FT@>3#T#T#Taxpy#$@N@cxxblas@E@Tr]
                         [anspose#&1t0.0#&1>@N@flens@CT>1#T@GeMatrix1t0.1#&>]
                         [@N@flens@CT>1#T@GeMatrix1t0.2#                    ]

    alpha    `(input) real scalar`                                             +
             Scaling factor for the values in $x$.
    A        `(input) real or complex valued GeMatrix`                         +
             Matrix $A$.
    B        `(input/output) real or complex valued GeMatrix`                  +
             Matrix $B$.

